/*
 * Marketcheck Cars API
 * <b>Access the New, Used and Certified cars inventories for all Car Dealers in US.</b> <br/>The data is sourced from online listings by over 44,000 Car dealers in US. At any time, there are about 6.2M searchable listings (about 1.9M unique VINs) for Used & Certified cars and about 6.6M (about 3.9M unique VINs) New Car listings from all over US. We use this API at the back for our website <a href='https://www.marketcheck.com' target='_blank'>www.marketcheck.com</a> and our Android and iOS mobile apps too.<br/><h5> Few useful links : </h5><ul><li>A quick view of the API and the use cases is depicated <a href='https://portals.marketcheck.com/mcapi/' target='_blank'>here</a></li><li>The Postman collection with various usages of the API is shared here https://www.getpostman.com/collections/2752684ff636cdd7bac2</li></ul>
 *
 * OpenAPI spec version: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package marketcheck.cars.api..client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * Averages
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-03-09T10:14:35.317+05:30")
public class Averages {
  @SerializedName("price")
  private BigDecimal price = null;

  @SerializedName("msrp")
  private BigDecimal msrp = null;

  @SerializedName("miles")
  private BigDecimal miles = null;

  @SerializedName("dom")
  private BigDecimal dom = null;

  @SerializedName("age")
  private BigDecimal age = null;

  @SerializedName("units")
  private BigDecimal units = null;

  public Averages price(BigDecimal price) {
    this.price = price;
    return this;
  }

   /**
   * Mean price value for the car
   * @return price
  **/
  @ApiModelProperty(value = "Mean price value for the car")
  public BigDecimal getPrice() {
    return price;
  }

  public void setPrice(BigDecimal price) {
    this.price = price;
  }

  public Averages msrp(BigDecimal msrp) {
    this.msrp = msrp;
    return this;
  }

   /**
   * Mean msrp value for the car
   * @return msrp
  **/
  @ApiModelProperty(value = "Mean msrp value for the car")
  public BigDecimal getMsrp() {
    return msrp;
  }

  public void setMsrp(BigDecimal msrp) {
    this.msrp = msrp;
  }

  public Averages miles(BigDecimal miles) {
    this.miles = miles;
    return this;
  }

   /**
   * Mean miles value for the car
   * @return miles
  **/
  @ApiModelProperty(value = "Mean miles value for the car")
  public BigDecimal getMiles() {
    return miles;
  }

  public void setMiles(BigDecimal miles) {
    this.miles = miles;
  }

  public Averages dom(BigDecimal dom) {
    this.dom = dom;
    return this;
  }

   /**
   * Average Days on Market value for the car based on all listings found in the Marketcheck database for this car
   * @return dom
  **/
  @ApiModelProperty(value = "Average Days on Market value for the car based on all listings found in the Marketcheck database for this car")
  public BigDecimal getDom() {
    return dom;
  }

  public void setDom(BigDecimal dom) {
    this.dom = dom;
  }

  public Averages age(BigDecimal age) {
    this.age = age;
    return this;
  }

   /**
   * Average age of the car
   * @return age
  **/
  @ApiModelProperty(value = "Average age of the car")
  public BigDecimal getAge() {
    return age;
  }

  public void setAge(BigDecimal age) {
    this.age = age;
  }

  public Averages units(BigDecimal units) {
    this.units = units;
    return this;
  }

   /**
   * No of units for this car on the market
   * @return units
  **/
  @ApiModelProperty(value = "No of units for this car on the market")
  public BigDecimal getUnits() {
    return units;
  }

  public void setUnits(BigDecimal units) {
    this.units = units;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Averages averages = (Averages) o;
    return Objects.equals(this.price, averages.price) &&
        Objects.equals(this.msrp, averages.msrp) &&
        Objects.equals(this.miles, averages.miles) &&
        Objects.equals(this.dom, averages.dom) &&
        Objects.equals(this.age, averages.age) &&
        Objects.equals(this.units, averages.units);
  }

  @Override
  public int hashCode() {
    return Objects.hash(price, msrp, miles, dom, age, units);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Averages {\n");
    
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    msrp: ").append(toIndentedString(msrp)).append("\n");
    sb.append("    miles: ").append(toIndentedString(miles)).append("\n");
    sb.append("    dom: ").append(toIndentedString(dom)).append("\n");
    sb.append("    age: ").append(toIndentedString(age)).append("\n");
    sb.append("    units: ").append(toIndentedString(units)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

