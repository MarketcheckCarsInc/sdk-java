/*
 * Marketcheck Cars API
 * <b>Access the New, Used and Certified cars inventories for all Car Dealers in US.</b> <br/>The data is sourced from online listings by over 44,000 Car dealers in US. At any time, there are about 6.2M searchable listings (about 1.9M unique VINs) for Used & Certified cars and about 6.6M (about 3.9M unique VINs) New Car listings from all over US. We use this API at the back for our website <a href='https://www.marketcheck.com' target='_blank'>www.marketcheck.com</a> and our Android and iOS mobile apps too.<br/><h5> Few useful links : </h5><ul><li>A quick view of the API and the use cases is depicated <a href='https://portals.marketcheck.com/mcapi/' target='_blank'>here</a></li><li>The Postman collection with various usages of the API is shared here https://www.getpostman.com/collections/2752684ff636cdd7bac2</li></ul>
 *
 * OpenAPI spec version: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package marketcheck.cars.api..client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * FuelEfficiency
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-03-09T10:14:35.317+05:30")
public class FuelEfficiency {
  @SerializedName("city_mileage")
  private String cityMileage = null;

  @SerializedName("highway_mileage")
  private String highwayMileage = null;

  @SerializedName("combined_mileage")
  private String combinedMileage = null;

  @SerializedName("annual_miles")
  private BigDecimal annualMiles = null;

  @SerializedName("monthly_fuel_expense")
  private BigDecimal monthlyFuelExpense = null;

  public FuelEfficiency cityMileage(String cityMileage) {
    this.cityMileage = cityMileage;
    return this;
  }

   /**
   * City Mileage in MPG
   * @return cityMileage
  **/
  @ApiModelProperty(value = "City Mileage in MPG")
  public String getCityMileage() {
    return cityMileage;
  }

  public void setCityMileage(String cityMileage) {
    this.cityMileage = cityMileage;
  }

  public FuelEfficiency highwayMileage(String highwayMileage) {
    this.highwayMileage = highwayMileage;
    return this;
  }

   /**
   * Highway Mileage in MPG
   * @return highwayMileage
  **/
  @ApiModelProperty(value = "Highway Mileage in MPG")
  public String getHighwayMileage() {
    return highwayMileage;
  }

  public void setHighwayMileage(String highwayMileage) {
    this.highwayMileage = highwayMileage;
  }

  public FuelEfficiency combinedMileage(String combinedMileage) {
    this.combinedMileage = combinedMileage;
    return this;
  }

   /**
   * Combined Mileage
   * @return combinedMileage
  **/
  @ApiModelProperty(value = "Combined Mileage")
  public String getCombinedMileage() {
    return combinedMileage;
  }

  public void setCombinedMileage(String combinedMileage) {
    this.combinedMileage = combinedMileage;
  }

  public FuelEfficiency annualMiles(BigDecimal annualMiles) {
    this.annualMiles = annualMiles;
    return this;
  }

   /**
   * Annual Miles of Car
   * @return annualMiles
  **/
  @ApiModelProperty(value = "Annual Miles of Car")
  public BigDecimal getAnnualMiles() {
    return annualMiles;
  }

  public void setAnnualMiles(BigDecimal annualMiles) {
    this.annualMiles = annualMiles;
  }

  public FuelEfficiency monthlyFuelExpense(BigDecimal monthlyFuelExpense) {
    this.monthlyFuelExpense = monthlyFuelExpense;
    return this;
  }

   /**
   * Monthly fuel expense
   * @return monthlyFuelExpense
  **/
  @ApiModelProperty(value = "Monthly fuel expense")
  public BigDecimal getMonthlyFuelExpense() {
    return monthlyFuelExpense;
  }

  public void setMonthlyFuelExpense(BigDecimal monthlyFuelExpense) {
    this.monthlyFuelExpense = monthlyFuelExpense;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FuelEfficiency fuelEfficiency = (FuelEfficiency) o;
    return Objects.equals(this.cityMileage, fuelEfficiency.cityMileage) &&
        Objects.equals(this.highwayMileage, fuelEfficiency.highwayMileage) &&
        Objects.equals(this.combinedMileage, fuelEfficiency.combinedMileage) &&
        Objects.equals(this.annualMiles, fuelEfficiency.annualMiles) &&
        Objects.equals(this.monthlyFuelExpense, fuelEfficiency.monthlyFuelExpense);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cityMileage, highwayMileage, combinedMileage, annualMiles, monthlyFuelExpense);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FuelEfficiency {\n");
    
    sb.append("    cityMileage: ").append(toIndentedString(cityMileage)).append("\n");
    sb.append("    highwayMileage: ").append(toIndentedString(highwayMileage)).append("\n");
    sb.append("    combinedMileage: ").append(toIndentedString(combinedMileage)).append("\n");
    sb.append("    annualMiles: ").append(toIndentedString(annualMiles)).append("\n");
    sb.append("    monthlyFuelExpense: ").append(toIndentedString(monthlyFuelExpense)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

